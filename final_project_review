Max Fishelson
Jake Waksbaum

Process
We came up with the idea to make a bit torrent client by the end of break, but we didn’t start to work on it until the final 3 weeks. There was a standard specification laid out online that we decided to follow, and only later realized the short comings of the model, such as that it only dealt with http trackers, as opposed to the more common udp tracker.  The first thing we tackled were the small assignments that were manageable individually, like the bencoder and decoder and the setting up of sockets and receivers.  Also, we would work on simple debugging.  Also a lot of debugging happened in this time.  We tried in the end to finish the project on two all-day coding sessions on the two Saturdays leading up to the deadline, but failed to anticipate the chunk of time debugging would take out of these saturdays.  We progressed a lot more quickly with the pair programming style, but we still didn’t have enough time, which forced us to resort to more bash algorithms and coding methods rather than fast or space efficient ones by the end.  Due to this sloppier method, when we attempted to put it all together at the end, it didn’t work correctly.  Unable to find the bug after hours of checking, we decided to submit the only 80% of a torrent client that we had. 

Project
We were disappointed in the result of the project. The additionally annoying fact was that in an effort to find the final bugs, we removed the functionality from the code entirely, either from messing something up or uncovering an unknown bug. Nevertheless, we are proud of the large steps we took on the way, which were by no means trivial, such as connecting to the tracker, connecting to peers, and exchanging messages with peers.  Given maybe an additional 2 weeks, I would without a doubt assume that we would have achieved full functionality, but it is on us for underestimating the amount of time required to take on such a task.

Lessons
We learned two major lessons.  Firstly, we should have spent more time designing the entire program in the beginning, which would have made it easier to do large chunks of the code at a time.  Secondly, we needed to properly estimate the time we had to complete the project.  If we had left more time for debugging, or started working on the project sooner, we would have been able to complete it.  In terms of programming lessons, we had to learn a lot, specifically multithreading, sockets and other net connections through java like input and output streams, bitwise operators, and SHA1 hashing for verifying downloaded data.